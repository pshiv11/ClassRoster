package classroster.controller;

import classroster.dao.ClassRosterDao;
import classroster.dao.ClassRosterDaoException;
import classroster.dao.ClassRosterDaoFileImpl;
import classroster.dto.Student;
import classroster.ui.ClassRosterView;
import classroster.ui.UserIO;
import classroster.ui.UserIOConsoleImpl;
import java.util.*;

public class ClassRosterController {
	
	private ClassRosterView view;
	private ClassRosterDao dao;
	
	
	
	
	public ClassRosterController(ClassRosterView view, ClassRosterDao dao) {
		this.view = view;
		this.dao = dao;
	}

	
	public void run() {
		boolean keepGoing = true;
		int menuSelection = 0;
		
		try {
			while(keepGoing) {
				menuSelection = this.getMenuSelection();
				switch(menuSelection) {
				
					case 1:
						this.listStudents();
						break;
					case 2:
						this.createStudent();	
						break;
					case 3:
						this.viewStudent();
						break;
					case 4:
						this.removeStudent();
						break;
					case 5:
						keepGoing = false;
						break;
						
					default:
						
						this.unknownCommand();	
				}
				
			}
		}catch(ClassRosterDaoException e) {
			view.displayErrorMessage(e.getMessage());
		}
			
		
		this.exitMessage();
	}
	
	private int getMenuSelection() {
		return view.printMenuAndGetSelection();
	}
	
	private void createStudent() throws ClassRosterDaoException {
		view.displayCreateStudentBanner();
		Student newStudent = view.getNewStudentInfo();
		dao.addStudent(newStudent.getStudentId(), newStudent);
		view.displayCreateSuccessBanner();
	}
	
	private void listStudents() throws ClassRosterDaoException {
		view.displayDisplayAllBanner();
		List<Student> studentList = dao.getAllStudents();
		view.displayStudentList(studentList);
	}
	
	private void viewStudent() throws ClassRosterDaoException {
		view.displayDisplayStudentBanner();
		String studentId = view.getStudentIdChoice();
		Student student = dao.getStudent(studentId);
		view.displayStudent(student);
	}
	
	private void removeStudent() throws ClassRosterDaoException {
		view.displayRemoveStudentBanner();
		String studentId = view.getStudentIdChoice();
		Student removedStudent = dao.removeStudent(studentId);
		view.displayRemoveResult(removedStudent);
	}
	
	private void unknownCommand() {
		view.displayUnknownCommandBanner();
	}
	
	private void exitMessage() {
		view.displayExitBanner();
	}
	
	
	
	
	
	
	
	
	
	
	
}
